#include "../alRemap/osl_remap.h"

shader alFractal
(
   int mode = 0 [[
      string widget = "mapper",
      string options = "scalar:0|vector:1"
   ]],
   int space = 0 [[
      string widget = "mapper",
      string options = "world:0|object:1|PRef:2|UV:3"
   ]],
   float frequency = 1,
   vector scale = vector(1),
   float t = 0,
   int octaves = 8,
   float distortion = 0,
   float lacunarity = 2.121,
   float gain = 0.5,
   int turbulent = 0,
   int ridged = 0,
   float ridgeOffset = 0,
   REMAP_FLOAT_DECLARE_PARAMS,
   color color1 = color(0),
   color color2 = color(1),
   point p = P,
   output color result = color(0)
)
{
   point pp = p;
   if (space == 1)
   {
      pp = transform("object", pp);
   }
   else if (space == 3)
   {
      pp = point(u, v, 0);
   }

   pp *= scale * frequency;

   if (mode == 0) // scalar
   {
      float n = 0;
      float amp = 1;
      float weight = 1;
      float vv;
      for (int i=0; i < octaves; ++i)
      {
         /*
         if (distortion != 0)
         {
            pp += distortion * 
         }
         */
         vv = noise("snoise", pp, t);
         if (turbulent)
         {
            vv = abs(vv);
         }
         if (ridged)
         {
            vv = ridgeOffset - vv;
            vv *= vv;
            vv *= weight;
            weight = vv * 2;
            weight = clamp(weight, 0, 1);
         }

         n += vv * amp;
         amp *= gain;

         pp *= lacunarity;
      }

      RemapFloatParams rmp = REMAP_FLOAT_CREATE;
      n = remap(n, rmp);
      result = mix(color1, color2, n);
   }

}