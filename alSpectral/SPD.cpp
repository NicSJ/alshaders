#include "SPD.h"
#include "alUtil.h"

AtPoint2 p2(float x, float y)
{
	AtPoint2 p;
	p.x = x;
	p.y = y;
	return p;
}

AtPoint2 xyD60(p2(0.32168f, 0.33767f));
AtPoint2 xyD65(p2(0.3128, 0.3290));
AtPoint2 xyP3(p2(0.314, 0.351));
ColorSpace CsRec709("Rec. 709", p2(0.64, 0.33), p2(0.30, 0.60), p2(0.15, 0.06), xyD65);
ColorSpace CsRec2020("Rec. 2020", p2(0.708, 0.292), p2(0.170, 0.797), p2(0.131, 0.046), xyD65);
ColorSpace CsACES("ACES", p2(0.73470, 0.26530), p2(0.00000, 1.00000), p2(0.00010, -0.07700), xyD60);
ColorSpace CsACES_D65("ACES_D65", p2(0.73470, 0.26530), p2(0.00000, 1.00000), p2(0.00010, -0.07700), xyD65);
ColorSpace CsP3("DCI-P3", p2(0.68, 0.32), p2(0.265, 0.69), p2(0.15, 0.06), xyP3);
ColorSpace CsP3_D65("DCI-P3_D65", p2(0.68, 0.32), p2(0.265, 0.69), p2(0.15, 0.06), xyD65);

ColorSpace::ColorSpace(float m00, float m10, float m20, float m01, float m11, float m21, float m02, float m12, float m22)
: matrix(true)
{
	m[0] = m00;
	m[1] = m10;
	m[2] = m20;
	m[3] = m01;
	m[4] = m11;
	m[5] = m21;
	m[6] = m02;
	m[7] = m12;
	m[8] = m22;
}

AtRGB ColorSpace::xyzToRgb(const AtRGB& xyz)
{
	
    AtRGB rgb;

    if (matrix)
    {
    	
    }
    else
    {
	    float xr, yr, zr, xg, yg, zg, xb, yb, zb;
	    float xw, yw, zw;
	    float rx, ry, rz, gx, gy, gz, bx, by, bz;
	    float rw, gw, bw;

	    xr = red.x;    yr = red.y;    zr = 1 - (xr + yr);
	    xg = green.x;  yg = green.y;  zg = 1 - (xg + yg);
	    xb = blue.x;   yb = blue.y;   zb = 1 - (xb + yb);

	    xw = white.x;  yw = white.y;  zw = 1 - (xw + yw);

	    // xyz -> rgb matrix, before scaling to white
	    rx = (yg * zb) - (yb * zg);  ry = (xb * zg) - (xg * zb);  rz = (xg * yb) - (xb * yg);
	    gx = (yb * zr) - (yr * zb);  gy = (xr * zb) - (xb * zr);  gz = (xb * yr) - (xr * yb);
	    bx = (yr * zg) - (yg * zr);  by = (xg * zr) - (xr * zg);  bz = (xr * yg) - (xg * yr);

	    // White scaling factors.
	    // Dividing by yw scales the white luminance to unity, as conventional
	    rw = ((rx * xw) + (ry * yw) + (rz * zw)) / yw;
	    gw = ((gx * xw) + (gy * yw) + (gz * zw)) / yw;
	    bw = ((bx * xw) + (by * yw) + (bz * zw)) / yw;

	    // xyz -> rgb matrix, correctly scaled to white
	    rx = rx / rw;  ry = ry / rw;  rz = rz / rw;
	    gx = gx / gw;  gy = gy / gw;  gz = gz / gw;
	    bx = bx / bw;  by = by / bw;  bz = bz / bw;

	    // rgb of the desired point
	    rgb.r = (rx * xyz.r) + (ry * xyz.g) + (rz * xyz.b);
	    rgb.g = (gx * xyz.r) + (gy * xyz.g) + (gz * xyz.b);
	    rgb.b = (bx * xyz.r) + (by * xyz.g) + (bz * xyz.b);
	}

    return rgb;
}

SPD::SPD()
{
	memset(_spd, 0, sizeof(float)*SPD_NUM_SAMPLES);
}

SPD::SPD(int c)
{
	set(c);
}

void SPD::set(int c)
{
	switch (c)
	{
	case kBLACK:
		memcpy(_spd, _black, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kWHITE:
		memcpy(_spd, _white, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kD60:
		memcpy(_spd, _D60, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kD65:
		memcpy(_spd, _D65, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kBLACK_2:
		memcpy(_spd, _black_2, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kBLUE:
		memcpy(_spd, _blue, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kBLUE_FLOWER:
		memcpy(_spd, _blue_flower, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kBLUE_SKY:
		memcpy(_spd, _blue_sky, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kBLUISH_GREEN:
		memcpy(_spd, _bluish_green, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kCYAN:
		memcpy(_spd, _cyan, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kDARK_SKIN:
		memcpy(_spd, _dark_skin, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kFOLIAGE:
		memcpy(_spd, _foliage, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kGREEN:
		memcpy(_spd, _green, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kLIGHT_SKIN:
		memcpy(_spd, _light_skin, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kMAGENTA:
		memcpy(_spd, _magenta, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kMODERATE_RED:
		memcpy(_spd, _moderate_red, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kNEUTRAL_35:
		memcpy(_spd, _neutral_35, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kNEUTRAL_5:
		memcpy(_spd, _neutral_5, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kNEUTRAL_65:
		memcpy(_spd, _neutral_65, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kNEUTRAL_8:
		memcpy(_spd, _neutral_8, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kORANGE:
		memcpy(_spd, _orange, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kORANGE_YELLOW:
		memcpy(_spd, _orange_yellow, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kPURPLE:
		memcpy(_spd, _purple, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kPURPLISH_BLUE:
		memcpy(_spd, _purplish_blue, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kRED:
		memcpy(_spd, _red, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kWHITE_95:
		memcpy(_spd, _white_95, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kYELLOW:
		memcpy(_spd, _yellow, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	case kYELLOW_GREEN:
		memcpy(_spd, _yellow_green, sizeof(float)*SPD_NUM_SAMPLES);
		break;

	default:
		memset(_spd, 0, sizeof(float)*SPD_NUM_SAMPLES);
		break;
	}
}

const float* SPD::get(int c) const
{
	switch (c)
	{
	case kBLACK:
		return _black;
		break;
	case kWHITE:
		return _white;
		break;
	case kD60:
		return _D60;
		break;
	case kD65:
		return _D65;
		break;
	case kBLACK_2:
		return _black_2;
		break;
	case kBLUE:
		return _blue;
		break;
	case kBLUE_FLOWER:
		return _blue_flower;
		break;
	case kBLUE_SKY:
		return _blue_sky;
		break;
	case kBLUISH_GREEN:
		return _bluish_green;
		break;
	case kCYAN:
		return _cyan;
		break;
	case kDARK_SKIN:
		return _dark_skin;
		break;
	case kFOLIAGE:
		return _foliage;
		break;
	case kGREEN:
		return _green;
		break;
	case kLIGHT_SKIN:
		return _light_skin;
		break;
	case kMAGENTA:
		return _magenta;
		break;
	case kMODERATE_RED:
		return _moderate_red;
		break;
	case kNEUTRAL_35:
		return _neutral_35;
		break;
	case kNEUTRAL_5:
		return _neutral_5;
		break;
	case kNEUTRAL_65:
		return _neutral_65;
		break;
	case kNEUTRAL_8:
		return _neutral_8;
		break;
	case kORANGE:
		return _orange;
		break;
	case kORANGE_YELLOW:
		return _orange_yellow;
		break;
	case kPURPLE:
		return _purple;
		break;
	case kPURPLISH_BLUE:
		return _purplish_blue;
		break;
	case kRED:
		return _red;
		break;
	case kWHITE_95:
		return _white_95;
		break;
	case kYELLOW:
		return _yellow;
		break;
	case kYELLOW_GREEN:
		return _yellow_green;
		break;

	default:
		return _black;
		break;
	}
}

void SPD::set(float f)
{
	for (int i=0; i < SPD_NUM_SAMPLES; ++i)
	{
		_spd[i] = f;
	}
}

AtRGB SPD::xyz(Constant t) const
{
	AtRGB result;

	float X=0.0f, Y=0.0f, Z=0.0f;
	float N = 0.0f;
	float Me;
	const float* illum = get(t);
	for (int i = 0; i < 81; i++)
	{
		Me = _spd[i] * illum[i];
		X += Me * _cieMatch[i][0];
		Y += Me * _cieMatch[i][1];
		Z += Me * _cieMatch[i][2];
		N += _cieMatch[i][1] * illum[i];
	}

	if (N == 0.0f) N = 1.0f;

	result.r = X / N;
	result.g = Y / N;
	result.b = Z / N;

	return result / 100.0f;
}

SPD SPD::operator +(const SPD& s) const
{
	SPD n;
	for (int i=0; i < SPD_NUM_SAMPLES; ++i)
	{
		n._spd[i] = _spd[i] + s._spd[i];
	}

	return n;
}

SPD SPD::operator -(const SPD& s) const
{
	SPD n;
	for (int i=0; i < SPD_NUM_SAMPLES; ++i)
	{
		n._spd[i] = _spd[i] - s._spd[i];
	}

	return n;
}

SPD SPD::operator *(const SPD& s) const
{
	SPD n;
	for (int i=0; i < SPD_NUM_SAMPLES; ++i)
	{
		n._spd[i] = _spd[i] * s._spd[i];
	}

	return n;
}

SPD SPD::operator *(float s) const
{
	SPD n;
	for (int i=0; i < SPD_NUM_SAMPLES; ++i)
	{
		n._spd[i] = _spd[i] * s;
	}

	return n;
}

const float SPD::_cieMatch[SPD_NUM_SAMPLES][3] =
{
	{0.0014,0.0000,0.0065}, {0.0022,0.0001,0.0105}, {0.0042,0.0001,0.0201},
	{0.0076,0.0002,0.0362}, {0.0143,0.0004,0.0679}, {0.0232,0.0006,0.1102},
	{0.0435,0.0012,0.2074}, {0.0776,0.0022,0.3713}, {0.1344,0.0040,0.6456},
	{0.2148,0.0073,1.0391}, {0.2839,0.0116,1.3856}, {0.3285,0.0168,1.6230},
	{0.3483,0.0230,1.7471}, {0.3481,0.0298,1.7826}, {0.3362,0.0380,1.7721},
	{0.3187,0.0480,1.7441}, {0.2908,0.0600,1.6692}, {0.2511,0.0739,1.5281},
	{0.1954,0.0910,1.2876}, {0.1421,0.1126,1.0419}, {0.0956,0.1390,0.8130},
	{0.0580,0.1693,0.6162}, {0.0320,0.2080,0.4652}, {0.0147,0.2586,0.3533},
	{0.0049,0.3230,0.2720}, {0.0024,0.4073,0.2123}, {0.0093,0.5030,0.1582},
	{0.0291,0.6082,0.1117}, {0.0633,0.7100,0.0782}, {0.1096,0.7932,0.0573},
	{0.1655,0.8620,0.0422}, {0.2257,0.9149,0.0298}, {0.2904,0.9540,0.0203},
	{0.3597,0.9803,0.0134}, {0.4334,0.9950,0.0087}, {0.5121,1.0000,0.0057},
	{0.5945,0.9950,0.0039}, {0.6784,0.9786,0.0027}, {0.7621,0.9520,0.0021},
	{0.8425,0.9154,0.0018}, {0.9163,0.8700,0.0017}, {0.9786,0.8163,0.0014},
	{1.0263,0.7570,0.0011}, {1.0567,0.6949,0.0010}, {1.0622,0.6310,0.0008},
	{1.0456,0.5668,0.0006}, {1.0026,0.5030,0.0003}, {0.9384,0.4412,0.0002},
	{0.8544,0.3810,0.0002}, {0.7514,0.3210,0.0001}, {0.6424,0.2650,0.0000},
	{0.5419,0.2170,0.0000}, {0.4479,0.1750,0.0000}, {0.3608,0.1382,0.0000},
	{0.2835,0.1070,0.0000}, {0.2187,0.0816,0.0000}, {0.1649,0.0610,0.0000},
	{0.1212,0.0446,0.0000}, {0.0874,0.0320,0.0000}, {0.0636,0.0232,0.0000},
	{0.0468,0.0170,0.0000}, {0.0329,0.0119,0.0000}, {0.0227,0.0082,0.0000},
	{0.0158,0.0057,0.0000}, {0.0114,0.0041,0.0000}, {0.0081,0.0029,0.0000},
	{0.0058,0.0021,0.0000}, {0.0041,0.0015,0.0000}, {0.0029,0.0010,0.0000},
	{0.0020,0.0007,0.0000}, {0.0014,0.0005,0.0000}, {0.0010,0.0004,0.0000},
	{0.0007,0.0002,0.0000}, {0.0005,0.0002,0.0000}, {0.0003,0.0001,0.0000},
	{0.0002,0.0001,0.0000}, {0.0002,0.0001,0.0000}, {0.0001,0.0000,0.0000},
	{0.0001,0.0000,0.0000}, {0.0001,0.0000,0.0000}, {0.0000,0.0000,0.0000}
};

const float SPD::_black[SPD_NUM_SAMPLES] = {
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
	0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f
};

const float SPD::_white[SPD_NUM_SAMPLES] = {
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
	1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f
};

const float SPD::_D65[SPD_NUM_SAMPLES] = {49.9755, 52.3118, 54.6482, 68.7015, 82.7549, 87.1204, 91.486, 92.4589, 93.4318, 90.057, 86.6823, 95.7736, 104.865, 110.936, 117.008, 117.41, 117.812, 116.336, 114.861, 115.392, 115.923, 112.367, 108.811, 109.082, 109.354, 108.578, 107.802, 106.296, 104.79, 106.239, 107.689, 106.047, 104.405, 104.225, 104.046, 102.023, 100, 98.1671, 96.3342, 96.0611, 95.788, 92.2368, 88.6856, 89.3459, 90.0062, 89.8026, 89.5991, 88.6489, 87.6987, 85.4936, 83.2886, 83.4939, 83.6992, 81.863, 80.0268, 80.1207, 80.2146, 81.2462, 82.2778, 80.281, 78.2842, 74.0027, 69.7213, 70.6652, 71.6091, 72.979, 74.349, 67.9765, 61.604, 65.7448, 69.8856, 72.4863, 75.087, 69.3398, 63.5927, 55.0054, 46.4182, 56.6118, 66.8054, 65.0941, 63.3828};
const float SPD::_D60[SPD_NUM_SAMPLES] = {41.45494057963752,41.763697508938776,46.60531924327943,59.22693818051071,72.27859383884864,78.23150013227261,80.44059999279465,82.73957958983493,82.91502693894319,79.0091680630604,77.67626397731756,85.16360901327776,95.68127430379398,103.26776370731451,107.95482086750596,109.77796398538841,109.55918680507406,108.41840211740484,107.75814070682792,109.07154803427949,109.6714042353418,106.73474105835233,103.70787331005091,103.981942291864,105.23219857523205,105.23586670977947,104.42766692185435,103.05288054946455,102.52293357805246,104.37141616067112,106.05267087904782,104.94890009931859,103.31515403458198,103.41628607734705,103.53859891732658,102.09930441954894,100.0,97.99272490904448,96.7514214188669,97.10240151401382,96.71282250154032,93.17445702616884,89.92147908442617,90.35193292172987,91.99979329504407,92.38400897656568,92.09870955067275,91.72285911177595,90.64600269701035,88.32755163522995,86.52648272486029,87.03423877761477,87.57918623550152,85.88458397465408,83.97614003583296,83.74314012167285,84.72407422805772,86.45081804145066,87.49349084772983,86.54633044168673,83.48307015694974,78.26878538005806,74.17245111876663,74.2751838609043,76.62038531099138,79.42385570062544,79.05184907375583,71.76335966741883,65.47137071741646,67.98408542348102,74.10607902725252,78.55661227679906,79.5271204277263,75.58493514677012,67.30716277162384,55.275105698389446,49.273538206159095,59.00862909021331,70.89241211789025,70.95011501056595,67.16399622630497};

const float SPD::_bluish_green[SPD_NUM_SAMPLES] = {0.110000, 0.133000, 0.167000, 0.208000, 0.252000, 0.284000, 0.303000, 0.314000, 0.322000, 0.329000, 0.336000, 0.344000, 0.353000, 0.363000, 0.375000, 0.390000, 0.408000, 0.433000, 0.460000, 0.492000, 0.523000, 0.548000, 0.566000, 0.577000, 0.582000, 0.583000, 0.580000, 0.576000, 0.569000, 0.560000, 0.549000, 0.535000, 0.519000, 0.501000, 0.480000, 0.458000, 0.436000, 0.414000, 0.392000, 0.369000, 0.346000, 0.324000, 0.302000, 0.279000, 0.260000, 0.245000, 0.234000, 0.226000, 0.221000, 0.217000, 0.215000, 0.212000, 0.210000, 0.209000, 0.208000, 0.209000, 0.211000, 0.215000, 0.220000, 0.227000, 0.233000, 0.239000, 0.244000, 0.249000, 0.252000, 0.252000, 0.250000, 0.248000, 0.244000, 0.245000, 0.245000, 0.251000, 0.260000, 0.269000, 0.278000, 0.288000, 0.297000, 0.301000, 0.297000, 0.296000, 0.296000};
const float SPD::_yellow[SPD_NUM_SAMPLES] = {0.054000, 0.053000, 0.054000, 0.053000, 0.053000, 0.053000, 0.053000, 0.052000, 0.052000, 0.052000, 0.053000, 0.053000, 0.053000, 0.054000, 0.055000, 0.056000, 0.059000, 0.065000, 0.075000, 0.093000, 0.121000, 0.157000, 0.202000, 0.252000, 0.303000, 0.351000, 0.394000, 0.436000, 0.475000, 0.512000, 0.544000, 0.572000, 0.597000, 0.615000, 0.630000, 0.645000, 0.660000, 0.673000, 0.686000, 0.698000, 0.708000, 0.718000, 0.726000, 0.732000, 0.737000, 0.742000, 0.746000, 0.749000, 0.753000, 0.757000, 0.761000, 0.765000, 0.768000, 0.772000, 0.777000, 0.779000, 0.780000, 0.780000, 0.781000, 0.782000, 0.785000, 0.785000, 0.787000, 0.789000, 0.792000, 0.792000, 0.793000, 0.792000, 0.790000, 0.792000, 0.792000, 0.790000, 0.787000, 0.782000, 0.778000, 0.780000, 0.782000, 0.781000, 0.752000, 0.728000, 0.710000};
const float SPD::_purplish_blue[SPD_NUM_SAMPLES] = {0.099000, 0.120000, 0.150000, 0.189000, 0.231000, 0.268000, 0.293000, 0.311000, 0.324000, 0.335000, 0.348000, 0.361000, 0.373000, 0.383000, 0.387000, 0.383000, 0.374000, 0.361000, 0.345000, 0.325000, 0.301000, 0.275000, 0.247000, 0.223000, 0.202000, 0.184000, 0.167000, 0.152000, 0.137000, 0.125000, 0.116000, 0.110000, 0.106000, 0.103000, 0.099000, 0.094000, 0.090000, 0.086000, 0.083000, 0.083000, 0.083000, 0.085000, 0.086000, 0.087000, 0.087000, 0.086000, 0.085000, 0.084000, 0.084000, 0.085000, 0.088000, 0.092000, 0.098000, 0.105000, 0.111000, 0.118000, 0.123000, 0.126000, 0.126000, 0.124000, 0.120000, 0.117000, 0.115000, 0.115000, 0.116000, 0.118000, 0.120000, 0.124000, 0.128000, 0.133000, 0.139000, 0.149000, 0.162000, 0.178000, 0.197000, 0.219000, 0.242000, 0.259000, 0.275000, 0.294000, 0.316000};
const float SPD::_neutral_8[SPD_NUM_SAMPLES] = {0.150000, 0.184000, 0.235000, 0.299000, 0.372000, 0.459000, 0.529000, 0.564000, 0.580000, 0.584000, 0.585000, 0.587000, 0.587000, 0.588000, 0.588000, 0.587000, 0.586000, 0.585000, 0.583000, 0.582000, 0.581000, 0.580000, 0.580000, 0.580000, 0.580000, 0.580000, 0.580000, 0.581000, 0.581000, 0.582000, 0.582000, 0.582000, 0.583000, 0.583000, 0.583000, 0.584000, 0.584000, 0.585000, 0.586000, 0.587000, 0.588000, 0.588000, 0.588000, 0.588000, 0.588000, 0.587000, 0.586000, 0.586000, 0.585000, 0.584000, 0.583000, 0.581000, 0.580000, 0.579000, 0.578000, 0.577000, 0.576000, 0.575000, 0.574000, 0.573000, 0.572000, 0.571000, 0.570000, 0.569000, 0.568000, 0.567000, 0.566000, 0.565000, 0.564000, 0.562000, 0.562000, 0.560000, 0.560000, 0.558000, 0.557000, 0.556000, 0.555000, 0.554000, 0.553000, 0.551000, 0.550000};
const float SPD::_black_2[SPD_NUM_SAMPLES] = {0.032000, 0.033000, 0.033000, 0.034000, 0.035000, 0.035000, 0.036000, 0.036000, 0.036000, 0.036000, 0.036000, 0.036000, 0.035000, 0.035000, 0.035000, 0.035000, 0.035000, 0.035000, 0.035000, 0.035000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.034000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.033000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000, 0.032000};
const float SPD::_magenta[SPD_NUM_SAMPLES] = {0.118000, 0.142000, 0.179000, 0.228000, 0.283000, 0.322000, 0.343000, 0.354000, 0.359000, 0.357000, 0.350000, 0.339000, 0.327000, 0.313000, 0.298000, 0.282000, 0.267000, 0.253000, 0.239000, 0.225000, 0.209000, 0.195000, 0.182000, 0.172000, 0.163000, 0.155000, 0.146000, 0.135000, 0.124000, 0.113000, 0.106000, 0.102000, 0.102000, 0.105000, 0.107000, 0.107000, 0.106000, 0.107000, 0.112000, 0.123000, 0.141000, 0.166000, 0.198000, 0.235000, 0.279000, 0.333000, 0.394000, 0.460000, 0.522000, 0.580000, 0.628000, 0.666000, 0.696000, 0.722000, 0.742000, 0.756000, 0.766000, 0.774000, 0.780000, 0.785000, 0.791000, 0.794000, 0.798000, 0.801000, 0.804000, 0.806000, 0.807000, 0.807000, 0.807000, 0.810000, 0.813000, 0.814000, 0.813000, 0.810000, 0.808000, 0.811000, 0.814000, 0.813000, 0.785000, 0.765000, 0.752000};
const float SPD::_neutral_5[SPD_NUM_SAMPLES] = {0.113000, 0.131000, 0.150000, 0.169000, 0.183000, 0.193000, 0.199000, 0.201000, 0.202000, 0.203000, 0.203000, 0.204000, 0.205000, 0.205000, 0.205000, 0.205000, 0.204000, 0.204000, 0.203000, 0.203000, 0.202000, 0.202000, 0.202000, 0.202000, 0.202000, 0.202000, 0.202000, 0.202000, 0.202000, 0.202000, 0.203000, 0.203000, 0.203000, 0.203000, 0.203000, 0.203000, 0.203000, 0.203000, 0.204000, 0.204000, 0.205000, 0.205000, 0.205000, 0.205000, 0.204000, 0.204000, 0.204000, 0.203000, 0.203000, 0.202000, 0.201000, 0.201000, 0.200000, 0.199000, 0.198000, 0.198000, 0.197000, 0.197000, 0.196000, 0.195000, 0.195000, 0.194000, 0.194000, 0.193000, 0.192000, 0.192000, 0.191000, 0.191000, 0.190000, 0.189000, 0.189000, 0.188000, 0.188000, 0.187000, 0.187000, 0.186000, 0.185000, 0.185000, 0.184000, 0.184000, 0.183000};
const float SPD::_blue_flower[SPD_NUM_SAMPLES] = {0.123000, 0.152000, 0.197000, 0.258000, 0.328000, 0.385000, 0.418000, 0.437000, 0.446000, 0.448000, 0.448000, 0.447000, 0.444000, 0.440000, 0.434000, 0.428000, 0.421000, 0.413000, 0.405000, 0.394000, 0.381000, 0.372000, 0.362000, 0.352000, 0.342000, 0.330000, 0.314000, 0.294000, 0.271000, 0.249000, 0.231000, 0.219000, 0.211000, 0.209000, 0.209000, 0.207000, 0.201000, 0.196000, 0.196000, 0.199000, 0.206000, 0.215000, 0.223000, 0.229000, 0.235000, 0.241000, 0.245000, 0.245000, 0.243000, 0.243000, 0.247000, 0.254000, 0.269000, 0.291000, 0.318000, 0.351000, 0.384000, 0.417000, 0.446000, 0.470000, 0.490000, 0.504000, 0.511000, 0.517000, 0.520000, 0.522000, 0.523000, 0.522000, 0.521000, 0.521000, 0.522000, 0.521000, 0.521000, 0.516000, 0.514000, 0.514000, 0.517000, 0.515000, 0.500000, 0.491000, 0.487000};
const float SPD::_blue[SPD_NUM_SAMPLES] = {0.069000, 0.081000, 0.096000, 0.114000, 0.136000, 0.156000, 0.175000, 0.193000, 0.208000, 0.224000, 0.244000, 0.265000, 0.290000, 0.316000, 0.335000, 0.342000, 0.338000, 0.324000, 0.302000, 0.273000, 0.239000, 0.205000, 0.172000, 0.144000, 0.120000, 0.101000, 0.086000, 0.074000, 0.066000, 0.059000, 0.054000, 0.051000, 0.048000, 0.046000, 0.045000, 0.044000, 0.043000, 0.042000, 0.041000, 0.041000, 0.040000, 0.040000, 0.040000, 0.040000, 0.039000, 0.039000, 0.040000, 0.040000, 0.040000, 0.040000, 0.041000, 0.041000, 0.042000, 0.042000, 0.042000, 0.043000, 0.043000, 0.043000, 0.044000, 0.044000, 0.044000, 0.044000, 0.045000, 0.046000, 0.048000, 0.050000, 0.051000, 0.053000, 0.056000, 0.060000, 0.064000, 0.070000, 0.079000, 0.091000, 0.104000, 0.120000, 0.138000, 0.154000, 0.168000, 0.186000, 0.204000};
const float SPD::_purple[SPD_NUM_SAMPLES] = {0.101000, 0.115000, 0.135000, 0.157000, 0.177000, 0.191000, 0.199000, 0.203000, 0.206000, 0.198000, 0.190000, 0.179000, 0.168000, 0.156000, 0.144000, 0.132000, 0.120000, 0.110000, 0.101000, 0.093000, 0.086000, 0.080000, 0.075000, 0.070000, 0.067000, 0.063000, 0.061000, 0.059000, 0.058000, 0.056000, 0.054000, 0.053000, 0.052000, 0.052000, 0.053000, 0.054000, 0.055000, 0.055000, 0.054000, 0.053000, 0.052000, 0.052000, 0.053000, 0.055000, 0.059000, 0.065000, 0.074000, 0.086000, 0.099000, 0.113000, 0.126000, 0.138000, 0.149000, 0.161000, 0.172000, 0.182000, 0.193000, 0.205000, 0.217000, 0.232000, 0.248000, 0.266000, 0.282000, 0.301000, 0.319000, 0.338000, 0.355000, 0.371000, 0.388000, 0.406000, 0.422000, 0.436000, 0.451000, 0.460000, 0.471000, 0.481000, 0.492000, 0.495000, 0.482000, 0.471000, 0.467000};
const float SPD::_orange[SPD_NUM_SAMPLES] = {0.053000, 0.054000, 0.054000, 0.054000, 0.054000, 0.054000, 0.053000, 0.053000, 0.052000, 0.052000, 0.052000, 0.052000, 0.052000, 0.052000, 0.052000, 0.052000, 0.052000, 0.052000, 0.053000, 0.054000, 0.055000, 0.056000, 0.057000, 0.059000, 0.061000, 0.064000, 0.068000, 0.076000, 0.086000, 0.101000, 0.120000, 0.143000, 0.170000, 0.198000, 0.228000, 0.260000, 0.297000, 0.338000, 0.380000, 0.418000, 0.452000, 0.481000, 0.503000, 0.520000, 0.532000, 0.543000, 0.552000, 0.560000, 0.566000, 0.572000, 0.578000, 0.583000, 0.587000, 0.593000, 0.599000, 0.602000, 0.604000, 0.606000, 0.608000, 0.611000, 0.615000, 0.619000, 0.622000, 0.625000, 0.628000, 0.630000, 0.633000, 0.633000, 0.633000, 0.636000, 0.637000, 0.639000, 0.638000, 0.633000, 0.633000, 0.636000, 0.641000, 0.639000, 0.616000, 0.598000, 0.582000};
const float SPD::_green[SPD_NUM_SAMPLES] = {0.055000, 0.056000, 0.057000, 0.058000, 0.058000, 0.058000, 0.059000, 0.059000, 0.059000, 0.060000, 0.062000, 0.063000, 0.065000, 0.067000, 0.070000, 0.074000, 0.078000, 0.084000, 0.091000, 0.101000, 0.113000, 0.125000, 0.140000, 0.157000, 0.180000, 0.208000, 0.244000, 0.286000, 0.324000, 0.351000, 0.363000, 0.363000, 0.355000, 0.342000, 0.323000, 0.303000, 0.281000, 0.260000, 0.238000, 0.217000, 0.196000, 0.177000, 0.158000, 0.140000, 0.124000, 0.111000, 0.101000, 0.094000, 0.089000, 0.086000, 0.084000, 0.082000, 0.080000, 0.078000, 0.077000, 0.076000, 0.075000, 0.075000, 0.075000, 0.077000, 0.078000, 0.080000, 0.082000, 0.085000, 0.088000, 0.089000, 0.089000, 0.090000, 0.090000, 0.090000, 0.089000, 0.092000, 0.094000, 0.097000, 0.102000, 0.106000, 0.110000, 0.111000, 0.112000, 0.112000, 0.112000};
const float SPD::_red[SPD_NUM_SAMPLES] = {0.052000, 0.052000, 0.052000, 0.052000, 0.051000, 0.051000, 0.050000, 0.050000, 0.049000, 0.049000, 0.049000, 0.049000, 0.049000, 0.049000, 0.049000, 0.048000, 0.048000, 0.047000, 0.047000, 0.046000, 0.045000, 0.045000, 0.044000, 0.044000, 0.044000, 0.044000, 0.044000, 0.044000, 0.044000, 0.044000, 0.044000, 0.044000, 0.045000, 0.046000, 0.047000, 0.048000, 0.050000, 0.053000, 0.057000, 0.063000, 0.072000, 0.086000, 0.109000, 0.143000, 0.192000, 0.256000, 0.332000, 0.413000, 0.486000, 0.550000, 0.598000, 0.631000, 0.654000, 0.672000, 0.686000, 0.694000, 0.700000, 0.704000, 0.707000, 0.712000, 0.718000, 0.721000, 0.724000, 0.727000, 0.729000, 0.730000, 0.730000, 0.729000, 0.727000, 0.728000, 0.729000, 0.729000, 0.727000, 0.723000, 0.721000, 0.724000, 0.728000, 0.727000, 0.702000, 0.680000, 0.664000};
const float SPD::_neutral_35[SPD_NUM_SAMPLES] = {0.074000, 0.079000, 0.084000, 0.088000, 0.091000, 0.093000, 0.094000, 0.094000, 0.094000, 0.094000, 0.094000, 0.095000, 0.095000, 0.095000, 0.095000, 0.094000, 0.094000, 0.094000, 0.094000, 0.093000, 0.093000, 0.093000, 0.093000, 0.092000, 0.092000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.092000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.093000, 0.092000, 0.092000, 0.092000, 0.092000, 0.091000, 0.091000, 0.091000, 0.090000, 0.090000, 0.090000, 0.090000, 0.089000, 0.089000, 0.089000, 0.088000, 0.088000, 0.088000, 0.087000, 0.087000, 0.087000, 0.087000, 0.086000, 0.086000, 0.086000, 0.086000, 0.085000, 0.085000, 0.085000, 0.085000, 0.085000, 0.084000, 0.084000, 0.084000, 0.084000, 0.084000, 0.083000, 0.083000, 0.083000};
const float SPD::_light_skin[SPD_NUM_SAMPLES] = {0.103000, 0.120000, 0.141000, 0.163000, 0.182000, 0.192000, 0.197000, 0.199000, 0.201000, 0.203000, 0.205000, 0.208000, 0.212000, 0.217000, 0.224000, 0.231000, 0.240000, 0.251000, 0.262000, 0.273000, 0.282000, 0.289000, 0.293000, 0.296000, 0.301000, 0.310000, 0.321000, 0.326000, 0.322000, 0.310000, 0.298000, 0.291000, 0.292000, 0.297000, 0.300000, 0.298000, 0.295000, 0.295000, 0.305000, 0.326000, 0.358000, 0.397000, 0.435000, 0.468000, 0.494000, 0.514000, 0.530000, 0.541000, 0.550000, 0.557000, 0.564000, 0.569000, 0.574000, 0.582000, 0.590000, 0.597000, 0.605000, 0.614000, 0.624000, 0.637000, 0.652000, 0.668000, 0.682000, 0.697000, 0.713000, 0.728000, 0.745000, 0.753000, 0.762000, 0.774000, 0.783000, 0.788000, 0.791000, 0.787000, 0.789000, 0.794000, 0.801000, 0.799000, 0.771000, 0.747000, 0.734000};
const float SPD::_yellow_green[SPD_NUM_SAMPLES] = {0.056000, 0.058000, 0.059000, 0.059000, 0.060000, 0.061000, 0.061000, 0.061000, 0.062000, 0.063000, 0.064000, 0.066000, 0.068000, 0.071000, 0.075000, 0.079000, 0.085000, 0.093000, 0.104000, 0.118000, 0.135000, 0.157000, 0.185000, 0.221000, 0.269000, 0.326000, 0.384000, 0.440000, 0.484000, 0.516000, 0.534000, 0.542000, 0.545000, 0.541000, 0.533000, 0.524000, 0.513000, 0.501000, 0.487000, 0.472000, 0.454000, 0.436000, 0.416000, 0.394000, 0.374000, 0.358000, 0.346000, 0.337000, 0.331000, 0.328000, 0.325000, 0.322000, 0.320000, 0.319000, 0.319000, 0.320000, 0.324000, 0.330000, 0.337000, 0.345000, 0.354000, 0.362000, 0.368000, 0.375000, 0.379000, 0.381000, 0.379000, 0.376000, 0.373000, 0.372000, 0.375000, 0.382000, 0.392000, 0.401000, 0.412000, 0.422000, 0.433000, 0.436000, 0.426000, 0.413000, 0.404000};
const float SPD::_cyan[SPD_NUM_SAMPLES] = {0.093000, 0.110000, 0.134000, 0.164000, 0.195000, 0.220000, 0.238000, 0.249000, 0.258000, 0.270000, 0.281000, 0.296000, 0.315000, 0.334000, 0.352000, 0.370000, 0.391000, 0.414000, 0.434000, 0.449000, 0.458000, 0.461000, 0.457000, 0.447000, 0.433000, 0.414000, 0.392000, 0.366000, 0.339000, 0.310000, 0.282000, 0.255000, 0.228000, 0.204000, 0.180000, 0.159000, 0.141000, 0.126000, 0.114000, 0.104000, 0.097000, 0.092000, 0.088000, 0.083000, 0.080000, 0.077000, 0.075000, 0.074000, 0.073000, 0.073000, 0.073000, 0.073000, 0.073000, 0.073000, 0.074000, 0.075000, 0.076000, 0.076000, 0.077000, 0.076000, 0.075000, 0.074000, 0.074000, 0.073000, 0.072000, 0.072000, 0.071000, 0.073000, 0.075000, 0.078000, 0.082000, 0.090000, 0.100000, 0.116000, 0.133000, 0.154000, 0.176000, 0.191000, 0.200000, 0.208000, 0.214000};
const float SPD::_white_95[SPD_NUM_SAMPLES] = {0.153000, 0.189000, 0.245000, 0.319000, 0.409000, 0.536000, 0.671000, 0.772000, 0.840000, 0.868000, 0.878000, 0.882000, 0.883000, 0.885000, 0.886000, 0.886000, 0.887000, 0.888000, 0.888000, 0.888000, 0.888000, 0.888000, 0.888000, 0.888000, 0.887000, 0.887000, 0.887000, 0.887000, 0.887000, 0.887000, 0.887000, 0.887000, 0.887000, 0.886000, 0.886000, 0.887000, 0.887000, 0.887000, 0.888000, 0.888000, 0.887000, 0.886000, 0.886000, 0.886000, 0.887000, 0.888000, 0.889000, 0.890000, 0.891000, 0.891000, 0.891000, 0.891000, 0.890000, 0.889000, 0.889000, 0.889000, 0.889000, 0.889000, 0.888000, 0.888000, 0.888000, 0.888000, 0.888000, 0.888000, 0.888000, 0.887000, 0.886000, 0.886000, 0.886000, 0.885000, 0.885000, 0.885000, 0.884000, 0.884000, 0.883000, 0.882000, 0.882000, 0.881000, 0.880000, 0.880000, 0.879000};
const float SPD::_moderate_red[SPD_NUM_SAMPLES] = {0.096000, 0.108000, 0.123000, 0.135000, 0.144000, 0.145000, 0.144000, 0.141000, 0.138000, 0.134000, 0.132000, 0.132000, 0.131000, 0.131000, 0.129000, 0.128000, 0.126000, 0.126000, 0.125000, 0.123000, 0.119000, 0.114000, 0.109000, 0.105000, 0.103000, 0.102000, 0.100000, 0.097000, 0.094000, 0.091000, 0.089000, 0.090000, 0.092000, 0.096000, 0.102000, 0.106000, 0.108000, 0.109000, 0.112000, 0.126000, 0.157000, 0.208000, 0.274000, 0.346000, 0.415000, 0.473000, 0.517000, 0.547000, 0.567000, 0.582000, 0.591000, 0.597000, 0.601000, 0.604000, 0.607000, 0.608000, 0.607000, 0.606000, 0.605000, 0.605000, 0.605000, 0.604000, 0.605000, 0.606000, 0.606000, 0.604000, 0.602000, 0.601000, 0.599000, 0.598000, 0.596000, 0.595000, 0.593000, 0.587000, 0.584000, 0.584000, 0.586000, 0.584000, 0.566000, 0.551000, 0.540000};
const float SPD::_blue_sky[SPD_NUM_SAMPLES] = {0.113000, 0.138000, 0.174000, 0.219000, 0.266000, 0.300000, 0.320000, 0.330000, 0.336000, 0.337000, 0.337000, 0.337000, 0.335000, 0.334000, 0.331000, 0.327000, 0.322000, 0.316000, 0.310000, 0.302000, 0.293000, 0.285000, 0.276000, 0.268000, 0.260000, 0.251000, 0.243000, 0.234000, 0.225000, 0.215000, 0.208000, 0.203000, 0.198000, 0.195000, 0.191000, 0.188000, 0.183000, 0.177000, 0.172000, 0.167000, 0.163000, 0.160000, 0.157000, 0.153000, 0.150000, 0.147000, 0.144000, 0.141000, 0.137000, 0.133000, 0.130000, 0.126000, 0.123000, 0.120000, 0.118000, 0.115000, 0.112000, 0.110000, 0.108000, 0.106000, 0.105000, 0.104000, 0.104000, 0.103000, 0.103000, 0.102000, 0.102000, 0.102000, 0.102000, 0.102000, 0.102000, 0.104000, 0.104000, 0.104000, 0.104000, 0.106000, 0.106000, 0.107000, 0.110000, 0.115000, 0.120000};
const float SPD::_orange_yellow[SPD_NUM_SAMPLES] = {0.060000, 0.061000, 0.063000, 0.064000, 0.065000, 0.065000, 0.064000, 0.064000, 0.064000, 0.064000, 0.064000, 0.065000, 0.065000, 0.066000, 0.067000, 0.068000, 0.069000, 0.073000, 0.077000, 0.084000, 0.092000, 0.100000, 0.107000, 0.115000, 0.123000, 0.133000, 0.146000, 0.166000, 0.193000, 0.229000, 0.273000, 0.323000, 0.374000, 0.418000, 0.456000, 0.487000, 0.512000, 0.534000, 0.554000, 0.570000, 0.584000, 0.598000, 0.609000, 0.617000, 0.624000, 0.630000, 0.635000, 0.640000, 0.645000, 0.650000, 0.654000, 0.658000, 0.662000, 0.667000, 0.672000, 0.675000, 0.676000, 0.677000, 0.678000, 0.681000, 0.685000, 0.688000, 0.690000, 0.693000, 0.696000, 0.698000, 0.698000, 0.698000, 0.698000, 0.700000, 0.701000, 0.701000, 0.701000, 0.695000, 0.694000, 0.696000, 0.700000, 0.698000, 0.673000, 0.653000, 0.639000};
const float SPD::_dark_skin[SPD_NUM_SAMPLES] = {0.048000, 0.051000, 0.055000, 0.060000, 0.065000, 0.068000, 0.068000, 0.067000, 0.064000, 0.062000, 0.059000, 0.057000, 0.055000, 0.054000, 0.053000, 0.053000, 0.052000, 0.052000, 0.052000, 0.053000, 0.054000, 0.055000, 0.057000, 0.059000, 0.061000, 0.062000, 0.065000, 0.067000, 0.070000, 0.072000, 0.074000, 0.075000, 0.076000, 0.078000, 0.079000, 0.082000, 0.087000, 0.092000, 0.100000, 0.107000, 0.115000, 0.122000, 0.129000, 0.134000, 0.138000, 0.142000, 0.146000, 0.150000, 0.154000, 0.158000, 0.163000, 0.167000, 0.173000, 0.180000, 0.188000, 0.196000, 0.204000, 0.213000, 0.222000, 0.231000, 0.242000, 0.251000, 0.261000, 0.271000, 0.282000, 0.294000, 0.305000, 0.318000, 0.334000, 0.354000, 0.372000, 0.392000, 0.409000, 0.420000, 0.436000, 0.450000, 0.462000, 0.465000, 0.448000, 0.432000, 0.421000};
const float SPD::_foliage[SPD_NUM_SAMPLES] = {0.048000, 0.049000, 0.049000, 0.049000, 0.050000, 0.049000, 0.049000, 0.050000, 0.050000, 0.051000, 0.052000, 0.053000, 0.054000, 0.056000, 0.058000, 0.060000, 0.061000, 0.063000, 0.064000, 0.065000, 0.067000, 0.068000, 0.070000, 0.072000, 0.078000, 0.088000, 0.106000, 0.130000, 0.155000, 0.173000, 0.181000, 0.182000, 0.177000, 0.168000, 0.157000, 0.147000, 0.137000, 0.129000, 0.126000, 0.125000, 0.122000, 0.119000, 0.115000, 0.109000, 0.104000, 0.100000, 0.098000, 0.097000, 0.098000, 0.100000, 0.100000, 0.099000, 0.097000, 0.096000, 0.095000, 0.095000, 0.095000, 0.097000, 0.101000, 0.110000, 0.125000, 0.147000, 0.174000, 0.210000, 0.247000, 0.283000, 0.311000, 0.329000, 0.343000, 0.353000, 0.358000, 0.362000, 0.364000, 0.360000, 0.362000, 0.364000, 0.368000, 0.368000, 0.355000, 0.346000, 0.341000};
const float SPD::_neutral_65[SPD_NUM_SAMPLES] = {0.138000, 0.167000, 0.206000, 0.249000, 0.289000, 0.324000, 0.346000, 0.354000, 0.357000, 0.358000, 0.359000, 0.360000, 0.361000, 0.362000, 0.362000, 0.361000, 0.361000, 0.359000, 0.358000, 0.358000, 0.357000, 0.356000, 0.356000, 0.356000, 0.356000, 0.356000, 0.356000, 0.356000, 0.357000, 0.357000, 0.357000, 0.358000, 0.358000, 0.358000, 0.358000, 0.358000, 0.359000, 0.359000, 0.360000, 0.361000, 0.361000, 0.361000, 0.361000, 0.361000, 0.360000, 0.360000, 0.359000, 0.358000, 0.357000, 0.356000, 0.355000, 0.354000, 0.353000, 0.352000, 0.351000, 0.350000, 0.349000, 0.348000, 0.346000, 0.346000, 0.345000, 0.344000, 0.343000, 0.342000, 0.341000, 0.340000, 0.339000, 0.338000, 0.337000, 0.336000, 0.335000, 0.334000, 0.333000, 0.332000, 0.331000, 0.330000, 0.329000, 0.328000, 0.327000, 0.326000, 0.325000};
const float SPD::_Au_nk[SPD_NUM_SAMPLES*2] = {1.684750, 1.922500, 1.674000, 1.936000, 1.666000, 1.947750, 1.658000, 1.956000, 1.647250, 1.959375, 1.647250, 1.959375, 1.636000, 1.958000, 1.628000, 1.951375, 1.628000, 1.951375, 1.616000, 1.940000, 1.596250, 1.924500, 1.596250, 1.924500, 1.562000, 1.904000, 1.502125, 1.875875, 1.502125, 1.875875, 1.426000, 1.846000, 1.345875, 1.814625, 1.345875, 1.814625, 1.242000, 1.796000, 1.242000, 1.796000, 1.086750, 1.797375, 1.086750, 1.797375, 0.916000, 1.840000, 0.916000, 1.840000, 0.754500, 1.956500, 0.754500, 1.956500, 0.608000, 2.120000, 0.608000, 2.120000, 0.491750, 2.326250, 0.491750, 2.326250, 0.402000, 2.540000, 0.402000, 2.540000, 0.345500, 2.730625, 0.345500, 2.730625, 0.345500, 2.730625, 0.306000, 2.880000, 0.306000, 2.880000, 0.267625, 2.940625, 0.267625, 2.940625, 0.267625, 2.940625, 0.236000, 2.970000, 0.236000, 2.970000, 0.236000, 2.970000, 0.212375, 3.015000, 0.212375, 3.015000, 0.194000, 3.060000, 0.194000, 3.060000, 0.194000, 3.060000, 0.177750, 3.070000, 0.177750, 3.070000, 0.177750, 3.070000, 0.177750, 3.070000, 0.166000, 3.150000, 0.166000, 3.150000, 0.166000, 3.150000, 0.161000, 3.445812, 0.161000, 3.445812, 0.161000, 3.445812, 0.161000, 3.445812, 0.160000, 3.800000, 0.160000, 3.800000, 0.160000, 3.800000, 0.160875, 4.087687, 0.160875, 4.087687, 0.160875, 4.087687, 0.160875, 4.087687, 0.164000, 4.357000, 0.164000, 4.357000, 0.164000, 4.357000, 0.164000, 4.357000, 0.169500, 4.610188, 0.169500, 4.610188, 0.169500, 4.610188, 0.169500, 4.610188, 0.169500, 4.610188, 0.176000, 4.860000, 0.176000, 4.860000, 0.176000, 4.860000, 0.176000, 4.860000, 0.181375, 5.125813, 0.181375, 5.125813};
const float SPD::_Cu_nk[SPD_NUM_SAMPLES*2] = {1.200000, 2.121562, 1.180000, 2.210000, 1.174375, 2.177188, 1.175000, 2.130000, 1.177500, 2.160063, 1.177500, 2.160063, 1.180000, 2.210000, 1.178125, 2.249938, 1.178125, 2.249938, 1.175000, 2.289000, 1.172812, 2.326000, 1.172812, 2.326000, 1.170000, 2.362000, 1.165312, 2.397625, 1.165312, 2.397625, 1.160000, 2.433000, 1.155312, 2.469187, 1.155312, 2.469187, 1.150000, 2.504000, 1.150000, 2.504000, 1.142812, 2.535875, 1.142812, 2.535875, 1.135000, 2.564000, 1.135000, 2.564000, 1.131562, 2.589625, 1.131562, 2.589625, 1.120000, 2.605000, 1.120000, 2.605000, 1.092437, 2.595562, 1.092437, 2.595562, 1.040000, 2.583000, 1.040000, 2.583000, 0.950375, 2.576500, 0.950375, 2.576500, 0.950375, 2.576500, 0.826000, 2.599000, 0.826000, 2.599000, 0.645875, 2.678062, 0.645875, 2.678062, 0.645875, 2.678062, 0.468000, 2.809000, 0.468000, 2.809000, 0.468000, 2.809000, 0.351250, 3.010750, 0.351250, 3.010750, 0.272000, 3.240000, 0.272000, 3.240000, 0.272000, 3.240000, 0.230813, 3.458187, 0.230813, 3.458187, 0.230813, 3.458187, 0.230813, 3.458187, 0.214000, 3.670000, 0.214000, 3.670000, 0.214000, 3.670000, 0.209250, 3.863125, 0.209250, 3.863125, 0.209250, 3.863125, 0.209250, 3.863125, 0.213000, 4.050000, 0.213000, 4.050000, 0.213000, 4.050000, 0.216250, 4.239563, 0.216250, 4.239563, 0.216250, 4.239563, 0.216250, 4.239563, 0.223000, 4.430000, 0.223000, 4.430000, 0.223000, 4.430000, 0.223000, 4.430000, 0.236500, 4.619563, 0.236500, 4.619563, 0.236500, 4.619563, 0.236500, 4.619563, 0.236500, 4.619563, 0.250000, 4.817000, 0.250000, 4.817000, 0.250000, 4.817000, 0.250000, 4.817000, 0.254188, 5.034125, 0.254188, 5.034125};
const float SPD::_W_nk[SPD_NUM_SAMPLES*2] = {3.450000, 2.490000, 3.435120, 2.447920, 3.424160, 2.433920, 3.400000, 2.420000, 3.384160, 2.419360, 3.374160, 2.419680, 3.350000, 2.420000, 3.340800, 2.422240, 3.333200, 2.426720, 3.324080, 2.447520, 3.320000, 2.460000, 3.310960, 2.466960, 3.300880, 2.489200, 3.304960, 2.509600, 3.310000, 2.530000, 3.309360, 2.553680, 3.313040, 2.570000, 3.320880, 2.590800, 3.330000, 2.610000, 3.337440, 2.618240, 3.345520, 2.625520, 3.354880, 2.639200, 3.366160, 2.659600, 3.380000, 2.680000, 3.399280, 2.694400, 3.419840, 2.705600, 3.438800, 2.713280, 3.455200, 2.717760, 3.470000, 2.720000, 3.484320, 2.720080, 3.495760, 2.719840, 3.501760, 2.720880, 3.502320, 2.724160, 3.500000, 2.730000, 3.500000, 2.730000, 3.494400, 2.738480, 3.490400, 2.751440, 3.493760, 2.773680, 3.493760, 2.773680, 3.505120, 2.802960, 3.520000, 2.830000, 3.535360, 2.840080, 3.535360, 2.840080, 3.551680, 2.846640, 3.567360, 2.857040, 3.582720, 2.872880, 3.582720, 2.872880, 3.600000, 2.890000, 3.622160, 2.907120, 3.622160, 2.907120, 3.646880, 2.922960, 3.646880, 2.922960, 3.673200, 2.936560, 3.700800, 2.946320, 3.700800, 2.946320, 3.730000, 2.950000, 3.730000, 2.950000, 3.763600, 2.942880, 3.763600, 2.942880, 3.795600, 2.929040, 3.821840, 2.910720, 3.821840, 2.910720, 3.840080, 2.888240, 3.840080, 2.888240, 3.850000, 2.860000, 3.850000, 2.860000, 3.850320, 2.820880, 3.850320, 2.820880, 3.839760, 2.779840, 3.839760, 2.779840, 3.815120, 2.741680, 3.815120, 2.741680, 3.815120, 2.741680, 3.777040, 2.710560, 3.777040, 2.710560, 3.730000, 2.690000, 3.730000, 2.690000, 3.674880, 2.688880, 3.674880, 2.688880, 3.617840, 2.700240, 3.617840, 2.700240};
const float SPD::_Ag_nk[SPD_NUM_SAMPLES*2] = {0.198063, 1.735000, 0.192000, 1.810000, 0.182000, 1.878750, 0.173000, 1.950000, 0.172625, 2.029375, 0.172625, 2.029375, 0.173000, 2.110000, 0.166688, 2.186250, 0.166688, 2.186250, 0.160000, 2.260000, 0.158500, 2.329375, 0.158500, 2.329375, 0.157000, 2.400000, 0.151063, 2.478750, 0.151063, 2.478750, 0.144000, 2.560000, 0.137313, 2.640000, 0.137313, 2.640000, 0.132000, 2.720000, 0.132000, 2.720000, 0.130250, 2.798125, 0.130250, 2.798125, 0.130000, 2.880000, 0.130000, 2.880000, 0.129938, 2.973750, 0.129938, 2.973750, 0.130000, 3.070000, 0.130000, 3.070000, 0.130063, 3.159375, 0.130063, 3.159375, 0.129000, 3.250000, 0.129000, 3.250000, 0.124375, 3.348125, 0.124375, 3.348125, 0.124375, 3.348125, 0.120000, 3.450000, 0.120000, 3.450000, 0.119313, 3.553750, 0.119313, 3.553750, 0.119313, 3.553750, 0.121000, 3.660000, 0.121000, 3.660000, 0.121000, 3.660000, 0.125500, 3.766250, 0.125500, 3.766250, 0.131000, 3.880000, 0.131000, 3.880000, 0.131000, 3.880000, 0.136125, 4.010625, 0.136125, 4.010625, 0.136125, 4.010625, 0.136125, 4.010625, 0.140000, 4.150000, 0.140000, 4.150000, 0.140000, 4.150000, 0.140063, 4.293125, 0.140063, 4.293125, 0.140063, 4.293125, 0.140063, 4.293125, 0.140000, 4.440000, 0.140000, 4.440000, 0.140000, 4.440000, 0.144313, 4.586250, 0.144313, 4.586250, 0.144313, 4.586250, 0.144313, 4.586250, 0.148000, 4.740000, 0.148000, 4.740000, 0.148000, 4.740000, 0.148000, 4.740000, 0.145875, 4.908125, 0.145875, 4.908125, 0.145875, 4.908125, 0.145875, 4.908125, 0.145875, 4.908125, 0.143000, 5.090000, 0.143000, 5.090000, 0.143000, 5.090000, 0.143000, 5.090000, 0.142563, 5.288750, 0.142563, 5.288750};
